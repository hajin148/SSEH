@page
@model AutomatedEducationProgram.Pages.Exam.SaveExamModel
@{
    ViewData["Title"] = "Home page";
    int count = 1;
}

<head>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js">
    </script>
    <style>
        /* Define colors */
        :root {
            --primary-color: #3498db; /* Blue */
            --accent-color: #2ecc71; /* Green */
            --text-color: #333; /* Dark gray */
            --error-color: #e74c3c; /* Red */
        }

        /* Updated styles */
        body {
            display: flex;
            flex-direction: column;
            margin-top: 1%;
            justify-content: center;
            align-items: center;
            color: var(--text-color); /* Use dark gray for text */
        }

        /* Form styles */
        form {
            width: 80%;
            margin: 0 auto;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: var(--primary-color); /* Use primary color for labels */
        }

        input[type="text"],
        input[type="checkbox"],
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 2px solid var(--accent-color); /* Use accent color for input border */
            border-radius: 5px;
        }

        input[type="submit"],
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        input[type="submit"] {
            background-color: #fff; /* White background for submit buttons */
            color: var(--primary-color); /* Blue text color */
            border: 2px solid var(--primary-color); /* Blue border */
        }

            input[type="submit"]:hover {
                background-color: var(--primary-color); /* Blue background on hover */
                color: #fff; /* White text color */
            }

        .btn-danger {
            background-color: var(--error-color); /* Red background for danger buttons */
            color: #fff; /* White text color */
        }

            .btn-danger:hover {
                background-color: #c0392b; /* Darker red on hover */
            }

        /* Table styles */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 10px;
            border: 1px solid #ddd; /* Light gray border */
            text-align: left;
        }

        th {
            background-color: var(--primary-color); /* Use primary color for table header background */
            color: #fff; /* White text color */
        }

        .large-text-input {
            width: 100%;
        }

        #tableDiv {
            margin-bottom: 20px;
        }

        .centered-title {
            text-align: center;
            color: var(--primary-color); /* Use primary color for title */
        }

        .centered-content {
            text-align: center;
        }

        .card {
            margin: 1rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            border-radius: 15px;
            background-color: #fff;
            padding: 1rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            flex-grow: 0;
        }
    </style>
</head>

<body>
    @if (Model.GeneratedQuestionsMCQ != null)
    {
        <!-- Container for the two sections -->
        <div style="display: flex; justify-content: space-between;">
            <form method="post" asp-controller="Exam" asp-action="SaveExam">
                <label for="title">Note Title</label>
                <input type="text" name="title" value="" placeholder="My New Note"/>
                <label for="description">Note Description</label>
                <input type="text" name="description" value="" placeholder="My Note's Description"/>
                <label for="publicity">Publish?</label>
                <div style="display: inline-block;">
                    <input type="checkbox" name="publicity" value="public" />
                </div>
                <table>
                    <thead>
                        <tr>
                            <th><h2>Question</h2></th>
                            <th><h2>Answer</h2></th>
                        </tr>
                    </thead>
                    <tbody>

                        @for (int i = 1; i <= Model.GeneratedQuestionsMCQ.Count; i++)
                        {
                            <tr id="row">
                                <td>
                                    <label for="q @i">Question</label>
                                    <input type="text" name="examQ @count" value="@Model.GeneratedQuestionsMCQ[i - 1].Question" />
                                </td>
                                <td>
                                    <label for="ans @i">Answer</label>
                                    <input class="large-text-input" type="text" name="examA @(count)" value="@Model.GeneratedQuestionsMCQ[i - 1].Answer" />
                                </td>
                                <td>
                                    <button class="btn btn-danger"
                                            id="DeleteRow"
                                            type="button">
                                        X
                                    </button>
                                </td>
                                <input type="hidden" name="examT @(count++)" value="@Model.GeneratedQuestionsMCQ[i - 1].QuestionType" />
                            </tr>
                        }
                        @for (int i = 1; i <= Model.GeneratedQuestionsShort.Count; i++)
                        {
                            <tr id="row">
                                <td>
                                    <label for="q @i">Question</label>
                                    <input type="text" name="examQ @count" value="@Model.GeneratedQuestionsShort[i - 1].Question" />
                                </td>
                                <td>
                                    <label for="ans @i">Answer</label>
                                    <input class="large-text-input" type="text" name="examA @(count)" value="@Model.GeneratedQuestionsShort[i - 1].Answer" />
                                </td>
                                <td>
                                    <button class="btn btn-danger"
                                            id="DeleteRow"
                                            type="button">
                                        X
                                    </button>
                                </td>
                                <input type="hidden" name="examT @(count++)" value="@Model.GeneratedQuestionsShort[i - 1].QuestionType" />
                            </tr>
                        }
                        @for (int i = 1; i <= Model.GeneratedQuestionsTF.Count; i++)
                        {
                            <tr id="row">
                                <td>
                                    <label for="q @i">Question</label>
                                    <input type="text" name="examQ @count" value="@Model.GeneratedQuestionsTF[i - 1].Question" />
                                </td>
                                <td>
                                    <label for="ans @i">Answer</label>
                                    <input class="large-text-input" type="text" name="examA @(count)" value="@Model.GeneratedQuestionsTF[i - 1].Answer" />
                                </td>
                                <td>
                                <button class="btn btn-danger"
                                        id="DeleteRow"
                                        type="button">
                                    X
                                </button>
                                </td>
                                <input type="hidden" name="examT @(count++)" value="@Model.GeneratedQuestionsTF[i - 1].QuestionType" />
                            </tr>
                        }
                    </tbody>
                </table>
                <div id="tableDiv">
                    <div id="newinput">
                    </div>
                </div>
                <button id="rowAdder" type="button" class="btn btn-dark">
                    <span class="bi bi-plus-square-dotted">
                    </span> Add Question
                </button>
                <input type="submit" value="Save New Note" class="btn btn-primary" />
                @if (!(Model.ExistingNotes == null || Model.ExistingNotes.Count == 0))
                {
                    <h1>Or, save to existing note</h1>
                    <select name="existingNotes">
                        @foreach (AutomatedEducationProgram.Models.Note note in Model.ExistingNotes)
                        {
                            <option value=@note.Id>@note.Title</option>
                        }
                    </select>
                    <input type="submit" name="submitButton" value="Merge To Existing Note" class="btn btn-primary" />
                }
            </form>
        </div>
    }

    <script type="text/javascript">
        let k = 1;
        $("#rowAdder").click(function () {
            newRowAdd =
                '<tr id=row>' +
                '<td>' +
                '<label for="">Question</label>' +
                '<input type="text" name="newExamQ ' + k + '" value="" />' +
                '</td>' +
                '<td>' +
                '<label for="">Answer</label>' +
                '<input class="large-text-input" type="text" name="newExamA ' + k + '" value="" />' +
                '</td>' +
                '<td>' +
                '<button class="btn btn-danger" id = "DeleteRow" type = "button"> X </button>' +
                '</td>' +
                '<input type="hidden" name = "newExamT ' + k + '" value = "1" />' +
                '</tr>';

            $('#newinput').append(newRowAdd);
            k++;
        });
        $("body").on("click", "#DeleteRow", function () {
            $(this).parents("#row").remove();
        })
    </script>
</body>

@section Scripts
    {

    }
