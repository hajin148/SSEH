@page
@model AutomatedEducationProgram.Pages.Vocabulary.SaveVocabularyModel
@{
    ViewData["Title"] = "Home page";
    int vocabAmount = Model.ProcessedVocabulary.Count;
}
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <style>
        /* Define colors */
        :root {
            --primary-color: #3498db; /* Blue */
            --accent-color: #2ecc71; /* Green */
            --text-color: #333; /* Dark gray */
            --error-color: #e74c3c; /* Red */
        }

        /* Updated styles */
        body {
            display: flex;
            flex-direction: column;
            margin-top: 1%;
            justify-content: center;
            align-items: center;
            color: var(--text-color); /* Use dark gray for text */
        }

        /* Form styles */
        form {
            width: 80%;
            margin: 0 auto;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: var(--primary-color); /* Use primary color for labels */
        }

        input[type="text"],
        input[type="checkbox"],
        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 2px solid var(--accent-color); /* Use accent color for input border */
            border-radius: 5px;
        }

        input[type="submit"],
        .btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        input[type="submit"] {
            background-color: var(--primary-color); /* Blue background for submit buttons */
            color: #fff; /* White text color */
        }

            input[type="submit"]:hover {
                background-color: #2980b9; /* Darker blue on hover */
            }

        .btn-danger {
            background-color: var(--error-color); /* Red background for danger buttons */
            color: #fff; /* White text color */
        }

            .btn-danger:hover {
                background-color: #c0392b; /* Darker red on hover */
            }

        /* Table styles */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            padding: 10px;
            border: 1px solid #ddd; /* Light gray border */
            text-align: left;
        }

        th {
            background-color: var(--primary-color); /* Use primary color for table header background */
            color: #fff; /* White text color */
        }

        /* Other existing styles */
        .large-text-input {
            width: 100%;
        }

        #tableDiv {
            margin-bottom: 20px;
        }

        .centered-title {
            text-align: center;
            color: var(--primary-color); /* Use primary color for title */
        }

        .centered-content {
            text-align: center;
        }

        .card {
            margin: 1rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            border-radius: 15px;
            background-color: #fff;
            padding: 1rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            flex-grow: 0;
        }
    </style>
</head>

<body>
    @if (Model.ProcessedVocabulary != null)
    {
        <!-- Container for the two sections -->
        <div style="display: flex; justify-content: space-between;">
            <form method="post" asp-controller="Vocabulary" asp-action="SaveVocabulary">
                <label for="title">Note Title</label>
                <input id="title-input" type="text" name="title" value="My New Note" placeholder="My New Note" />
                <label for="description">Note Description</label>
                <input id="desc-input" type="text" name="description" value="Description" placeholder="My Note's Description" />
                <label for="publicity">Publish?</label>
                <input type="checkbox" name="publicity" value="public" />
            <table>
                <thead>
                    <tr>
                        <th>Term</th>
                        <th>Definition</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 1; i <= Model.ProcessedVocabulary.Count; i++)
                    {
                        <tr id="row">
                            <td>
                                <label for="term @i">Term</label>
                                <input type="text" name="vocabTerm @i" value="@Model.ProcessedVocabulary[i - 1].Term" />
                            </td>
                            <td>
                                <label for="term @i">Definition</label>
                                <input class="large-text-input" type="text" name="vocabDef @i" value="@Model.ProcessedVocabulary[i - 1].Definition" />
                            </td>
                            <td>
                                <button id="DeleteRow" class="btn btn-danger DeleteRow" type="button">X</button>
                            </td>
                        </tr>
                    }
                    </tbody>    
                </table>
                <div id="tableDiv">
                    <div id="newinput">
                    </div>
                </div>
                <button id="rowAdder" type="button" class="btn btn-dark">
                    <span class="bi bi-plus-square-dotted">
                    </span> Add Word
                </button>
                <input id="new-note-button" type="submit" value="Save New Note" class="btn btn-primary" />
                @if (!(Model.ExistingNotes == null || Model.ExistingNotes.Count == 0))
                {
                    <h1>Or, save to existing note</h1>
                    <select name="existingNotes">
                        @foreach (AutomatedEducationProgram.Models.Note note in Model.ExistingNotes)
                        {
                            <option value=@note.Id>@note.Title</option>
                        }
                    </select>
                    <input type="submit" name="submitButton" value="Merge To Existing Note" class="btn btn-primary" />
                }
            </form>
        </div>
    }

    <script type="text/javascript">
        let k = 1;
        let vCount = @vocabAmount;
        $("#rowAdder").click(function () {
            newRowAdd =
                '<tr id=row>' +
                '<td>' +
                '<label for="term ' + k + '">Term</label>' +
                '<input type="text" name="newVocabTerm ' + k + '" value="New Term"/>' +
                '</td>' +
                '<td>' +
                '<label for="term ' + k + '">Definition</label>' +
                '<input class="large-text-input" type="text" name="newVocabDef ' + k + '" value="New Definition" />' +
                '</td>' +
                '<td>' +
                '<button id="DeleteRow" class="btn btn-danger DeleteRow" type="button"> X </button>' +
                '</td>' +
                '</tr>';

            $('#newinput').append(newRowAdd);
            k++;
            vCount = vCount + 1;
        });
        $("body").on("click", "#DeleteRow", function () {
            if (vCount > 1) {
                $(this).parents("#row").remove();
                vCount = vCount - 1;
            }
        });
        $("#title-input").on("change keyup paste", function () {
            if ($("#title-input").val().length == 0) {
                document.getElementById("new-note-button").disabled = true;
            } else {
                document.getElementById("new-note-button").disabled = false;
            }
        });
    </script>
</body>

@section Scripts
{

}
