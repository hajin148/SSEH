@page
@model AutomatedEducationProgram.Pages.Vocabulary.FlashcardModel
@{
    ViewData["Title"] = "Home page";
}

<style>
    body, html {
        height: 100%;
        margin: 0;
    }

    .container {
        min-height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center; /* Center the content horizontally */
    }

    .flashcard-container {
        display: flex;
        justify-content: space-between; /* Distribute cards evenly */
        width: 80%; /* Adjust width as needed */
        margin-top: 10vh;
    }

    .flashcard {
        width: 300px;
        height: 200px;
        transform-style: preserve-3d;
        transition: transform 0.5s;
        position: relative;
        border: 2px solid #2ecc71; /* Green border color */
    }

    .front,
    .back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #fff;
        border: 1px solid #dee2e6;
        box-sizing: border-box;
        font-size: 18px;
    }

    .back {
        transform: rotateY(180deg);
        text-align: center; /* Center the content horizontally */
    }

    .flipped {
        transform: rotateY(180deg);
    }

    .button-container-left,
    .button-container-right {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
    }

    .button-container-left {
        left: 5%;
    }

    .button-container-right {
        right: 5%;
    }

</style>

<body>
    <div class="container">
        @if (Model.ProcessedVocabulary != null && Model.ProcessedVocabulary.Count > 0)
        {
            <div class="flashcard-container">
                <div class="button-container-left">
                    <button onclick="prevCard()" class="btn btn-primary">
                        <span>&#8592;</span> <!-- Unicode for left arrow -->
                    </button>
                </div>
                @for (int i = 0; i < Model.ProcessedVocabulary.Count; i++)
                {
                    <div class="flashcard" id="flashCard@(i + 1)">
                        <div class="front">
                            @Model.ProcessedVocabulary[i].Term
                        </div>
                        <div class="back">
                            @Model.ProcessedVocabulary[i].Definition
                        </div>
                    </div>
                }
                <div class="button-container-right">
                    <button onclick="nextCard()" class="btn btn-primary">
                        <span>&#8594;</span> <!-- Unicode for right arrow -->
                    </button>
                </div>
            </div>
        }
        else
        {
            <div>No vocabularies to display.</div>
        }
    </div>
</body>

@section Scripts
{
    <script src="~/js/Flashcard.js"></script>
    <script>
        var currentIndex = 0;
        var flashcards = document.querySelectorAll('.flashcard');

        function showCard(index) {
            for (var i = 0; i < flashcards.length; i++) {
                if (i === index) {
                    flashcards[i].style.display = 'block';
                } else {
                    flashcards[i].style.display = 'none';
                }
            }
        }

        function nextCard() {
            currentIndex = (currentIndex + 1) % flashcards.length;
            showCard(currentIndex);
        }

        function prevCard() {
            currentIndex = (currentIndex - 1 + flashcards.length) % flashcards.length;
            showCard(currentIndex);
        }

        function flip(cardNumber) {
            var flashcard = document.getElementById("flashCard" + cardNumber);
            if (flashcard) {
                flashcard.classList.toggle("flipped");
            }
        }

        showCard(currentIndex);

        // Add event listeners to each card to flip on click
        flashcards.forEach(function (card, index) {
            card.addEventListener('click', function () {
                flip(index + 1);
            });
        });
    </script>
}

<style>
    /* Existing CSS remains unchanged */

    .button-container {
        text-align: center;
        margin-top: 20px; /* Increase the top margin */
    }

    .navigation-buttons {
        margin-top: 10px; /* Increase the top margin */
    }
</style>



